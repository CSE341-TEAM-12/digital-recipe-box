{
  "swagger": "2.0",
  "info": {
    "title": "Digital Recipe Box API",
    "description": "REST API for Digital Recipe Box - A comprehensive recipe management system with Google OAuth authentication",
    "version": "1.0.0",
    "contact": {
      "name": "CSE341 Team-12",
      "url": "https://github.com/CSE341-TEAM-12/digital-recipe-box"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "General",
      "description": "General API endpoints and information"
    },
    {
      "name": "Authentication",
      "description": "Google OAuth authentication endpoints - Login, logout, and authentication status"
    },
    {
      "name": "Users",
      "description": "User management endpoints - Get user profile and user recipes"
    },
    {
      "name": "Recipes",
      "description": "Recipe management endpoints - Create, read, and manage cooking recipes with ingredients, instructions, cooking time, and serving information"
    },
    {
      "name": "Cookbooks",
      "description": "Cookbook management endpoints - Organize recipes into collections for better management and organization"
    },
    {
      "name": "Reviews",
      "description": "Recipe review endpoints - Rate and review recipes to help other users discover great recipes"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "googleAuth": {
      "type": "oauth2",
      "authorizationUrl": "/auth/google",
      "flow": "implicit",
      "scopes": {
        "profile": "Access to user profile information",
        "email": "Access to user email address"
      },
      "description": "Google OAuth 2.0 authentication. Use /auth/google to initiate login flow."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Welcome message and API information for the Digital Recipe Box API",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Welcome to Digital Recipe Box API"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "General"
        ],
        "summary": "API Welcome"
      },
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "description": "Redirects user to Google OAuth consent screen to begin authentication process",
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "tags": [
          "Authentication"
        ],
        "summary": "Initiate Google OAuth login"
      }
    },
    "/auth/google/callback": {
      "get": {
        "description": "Handles the callback from Google OAuth after user consent",
        "responses": {
          "503": {
            "description": "Service Unavailable"
          }
        },
        "tags": [
          "Authentication"
        ],
        "summary": "Google OAuth callback"
      }
    },
    "/auth/login/success": {
      "get": {
        "description": "Returns user information after successful Google OAuth authentication",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Authentication"
        ],
        "summary": "Get successful login status"
      }
    },
    "/auth/login/failed": {
      "get": {
        "description": "Returns error information when Google OAuth authentication fails",
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Authentication"
        ],
        "summary": "Get failed login status"
      }
    },
    "/auth/logout": {
      "get": {
        "description": "Logs out the current user and destroys the session",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Authentication"
        ],
        "summary": "Logout user"
      }
    },
    "/auth/status": {
      "get": {
        "description": "Returns current user authentication status and session information",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Authentication"
        ],
        "summary": "Check authentication status"
      }
    },
    "/users/me": {
      "get": {
        "description": "Get the profile information of the currently authenticated user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Users"
        ],
        "summary": "Get current user profile",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/users/{id}/recipes": {
      "get": {
        "description": "Get all public recipes created by a specific user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Users"
        ],
        "summary": "Get user recipes by user ID"
      }
    },
    "/recipes/": {
      "get": {
        "description": "Retrieve a list of all public recipes available to all users",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Recipes"
        ],
        "summary": "Get all public recipes"
      },
      "post": {
        "description": "Create a new recipe with ingredients, instructions, and metadata. Requires authentication.",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Recipes"
        ],
        "summary": "Create a new recipe",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Recipe data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeInput"
            }
          }
        ]
      }
    },
    "/recipes/user": {
      "get": {
        "description": "Get all recipes (both public and private) owned by the authenticated user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Recipes"
        ],
        "summary": "Get all user recipes",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/recipes/{id}": {
      "get": {
        "description": "Get a specific recipe by its ID. Public recipes can be accessed by anyone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recipe ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Recipes"
        ],
        "summary": "Get a single recipe by ID"
      },
      "put": {
        "description": "Update an existing recipe. Only the recipe creator can update their own recipes.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recipe ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated recipe data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Recipes"
        ],
        "summary": "Update a recipe by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete a recipe and all its associated reviews. Only the recipe creator can delete their own recipes.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recipe ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Recipes"
        ],
        "summary": "Delete a recipe by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/cookbooks/": {
      "get": {
        "description": "Get all cookbooks owned by the authenticated user",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Cookbooks"
        ],
        "summary": "Get all user cookbooks",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      },
      "post": {
        "description": "Create a new cookbook with a name, description, and optional recipe collection",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Cookbooks"
        ],
        "summary": "Create a new cookbook",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cookbook data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CookbookInput"
            }
          }
        ]
      }
    },
    "/cookbooks/{id}": {
      "get": {
        "description": "Get a specific cookbook by its ID. User must be the owner of the cookbook to access it.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cookbook ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Cookbooks"
        ],
        "summary": "Get a single cookbook by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      },
      "put": {
        "description": "Update an existing cookbook with new name, description, or recipe collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cookbook ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated cookbook data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CookbookInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Cookbooks"
        ],
        "summary": "Update a cookbook by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete a cookbook permanently. Only the cookbook owner can delete their own cookbooks.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cookbook ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Cookbooks"
        ],
        "summary": "Delete a cookbook by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/reviews/recipe/{recipeId}": {
      "get": {
        "description": "Get all reviews for a specific recipe and calculate the average rating",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "description": "Recipe ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Reviews"
        ],
        "summary": "Get all reviews for a recipe"
      },
      "post": {
        "description": "Add a new review to a recipe with rating and comment. Users can only review public recipes.",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "description": "Recipe ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Review data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Reviews"
        ],
        "summary": "Add a review to a recipe",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/reviews/user": {
      "get": {
        "description": "Get all reviews created by the authenticated user across all recipes",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Reviews"
        ],
        "summary": "Get all user reviews",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/reviews/{id}": {
      "get": {
        "description": "Get a specific review by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Review ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Reviews"
        ],
        "summary": "Get a single review by ID"
      },
      "put": {
        "description": "Update an existing review. Only the review author can update their own reviews.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Review ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated review data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReviewInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Reviews"
        ],
        "summary": "Update a review by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      },
      "delete": {
        "description": "Delete a review. Only the review author can delete their own reviews.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Review ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Reviews"
        ],
        "summary": "Delete a review by ID",
        "security": [
          {
            "googleAuth": [
              "profile",
              "email"
            ]
          }
        ]
      }
    },
    "/google": {
      "get": {
        "description": "",
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/google/callback": {
      "get": {
        "description": "",
        "responses": {
          "503": {
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/login/success": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/login/failed": {
      "get": {
        "description": "",
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/status": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/me": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}/recipes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/recipe/{recipeId}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439012"
                }
              }
            },
            "oauthId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "123456789012345678901"
                }
              }
            },
            "displayName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "John Doe"
                }
              }
            },
            "firstName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "John"
                }
              }
            },
            "lastName": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Doe"
                }
              }
            },
            "email": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "john.doe@example.com"
                }
              }
            },
            "profileImageUrl": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "https://lh3.googleusercontent.com/a/default-user"
                }
              }
            },
            "createdAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            },
            "updatedAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "Recipe": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                }
              }
            },
            "title": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Chocolate Chip Cookies"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Classic homemade cookies"
                }
              }
            },
            "ingredients": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "flour"
                            }
                          }
                        },
                        "quantity": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "2 cups"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "instructions": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Preheat oven to 375°F",
                    "Mix ingredients",
                    "Bake for 10 minutes"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "prepTimeMinutes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 15
                }
              }
            },
            "cookTimeMinutes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 12
                }
              }
            },
            "servings": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 24
                }
              }
            },
            "isPublic": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "boolean"
                },
                "example": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "dessert",
                    "cookies"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "creatorId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "507f1f77bcf86cd799439012"
                        }
                      }
                    },
                    "displayName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    }
                  }
                }
              }
            },
            "createdAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            },
            "updatedAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "RecipeInput": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "title"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "title": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Chocolate Chip Cookies"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Classic homemade cookies"
                }
              }
            },
            "ingredients": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "flour"
                            }
                          }
                        },
                        "quantity": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "example": {
                              "type": "string",
                              "example": "2 cups"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "instructions": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Preheat oven to 375°F",
                    "Mix ingredients"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "prepTimeMinutes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 15
                }
              }
            },
            "cookTimeMinutes": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 12
                }
              }
            },
            "servings": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "example": {
                  "type": "number",
                  "example": 24
                }
              }
            },
            "isPublic": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "boolean"
                },
                "example": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "tags": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "dessert",
                    "cookies"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Cookbook": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439013"
                }
              }
            },
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "My Dessert Collection"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Sweet treats and desserts"
                }
              }
            },
            "recipeIds": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "$ref": "#/definitions/Recipe"
                }
              }
            },
            "ownerId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "507f1f77bcf86cd799439012"
                        }
                      }
                    },
                    "displayName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    }
                  }
                }
              }
            },
            "createdAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            },
            "updatedAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "CookbookInput": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "name"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "My Dessert Collection"
                }
              }
            },
            "description": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Sweet treats and desserts"
                }
              }
            },
            "recipeIds": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "507f1f77bcf86cd799439011"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439014"
                }
              }
            },
            "rating": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "minimum": {
                  "type": "number",
                  "example": 1
                },
                "maximum": {
                  "type": "number",
                  "example": 5
                },
                "example": {
                  "type": "number",
                  "example": 5
                }
              }
            },
            "comment": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Absolutely delicious!"
                }
              }
            },
            "reviewerId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "507f1f77bcf86cd799439015"
                        }
                      }
                    },
                    "displayName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Jane Smith"
                        }
                      }
                    }
                  }
                }
              }
            },
            "recipeId": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "507f1f77bcf86cd799439011"
                }
              }
            },
            "createdAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            },
            "updatedAt": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "format": {
                  "type": "string",
                  "example": "date-time"
                }
              }
            }
          }
        }
      }
    },
    "ReviewInput": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "required": {
          "type": "array",
          "example": [
            "rating"
          ],
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "rating": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "number"
                },
                "minimum": {
                  "type": "number",
                  "example": 1
                },
                "maximum": {
                  "type": "number",
                  "example": 5
                },
                "example": {
                  "type": "number",
                  "example": 5
                }
              }
            },
            "comment": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Absolutely delicious!"
                }
              }
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "error": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Error message"
                }
              }
            },
            "message": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "example": {
                  "type": "string",
                  "example": "Additional context"
                }
              }
            },
            "details": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                },
                "example": {
                  "type": "array",
                  "example": [
                    "Specific validation errors"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}