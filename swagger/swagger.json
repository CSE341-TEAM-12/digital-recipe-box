{
  "swagger": "2.0",
  "info": {
    "title": "Digital Recipe Box API",
    "description": "REST API for Digital Recipe Box - A comprehensive recipe management system",
    "version": "1.0.0",
    "contact": {
      "name": "CSE341 Team-12",
      "url": "https://github.com/CSE341-TEAM-12/digital-recipe-box"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "General",
      "description": "General API endpoints and information"
    },
    {
      "name": "Recipes",
      "description": "Recipe management endpoints - Create, read, and manage cooking recipes with ingredients, instructions, cooking time, and serving information"
    },
    {
      "name": "Cookbooks",
      "description": "Cookbook management endpoints - Organize recipes into collections for better management and organization"
    },
    {
      "name": "Reviews",
      "description": "Recipe review endpoints - Rate and review recipes to help other users discover great recipes"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT token for authentication. Format: Bearer {token}"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["General"],
        "summary": "API Welcome Message",
        "description": "Returns a welcome message for the Digital Recipe Box API",
        "responses": {
          "200": {
            "description": "Welcome message returned successfully",
            "schema": {
              "type": "string",
              "example": "Welcome to Digital Recipe Box API"
            }
          }
        }
      }
    },
    "/recipes/": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get all public recipes",
        "description": "Retrieve all publicly available recipes",
        "responses": {
          "200": {
            "description": "List of recipes retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Public recipes retrieved successfully" },
                "count": { "type": "number", "example": 2 },
                "recipes": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Recipe" }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "tags": ["Recipes"],
        "summary": "Create a new recipe",
        "description": "Create a new recipe with ingredients and instructions. Requires authentication.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Recipe data",
            "required": true,
            "schema": { "$ref": "#/definitions/RecipeInput" }
          }
        ],
        "responses": {
          "201": {
            "description": "Recipe created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Recipe created successfully" },
                "recipe": { "$ref": "#/definitions/Recipe" }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/recipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get recipe by ID",
        "description": "Get a specific recipe by its ID. Public recipes can be accessed by anyone.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Recipe retrieved successfully" },
                "recipe": { "$ref": "#/definitions/Recipe" }
              }
            }
          },
          "403": {
            "description": "Forbidden - Access denied for private recipe",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Not Found - Recipe not found",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/cookbooks/": {
      "get": {
        "tags": ["Cookbooks"],
        "summary": "Get user cookbooks",
        "description": "Get all cookbooks owned by the authenticated user",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Cookbooks retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "User cookbooks retrieved successfully" },
                "count": { "type": "number", "example": 1 },
                "cookbooks": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Cookbook" }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "tags": ["Cookbooks"],
        "summary": "Create a new cookbook",
        "description": "Create a new cookbook with name, description, and recipe collection",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Cookbook data",
            "required": true,
            "schema": { "$ref": "#/definitions/CookbookInput" }
          }
        ],
        "responses": {
          "201": {
            "description": "Cookbook created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Cookbook created successfully" },
                "cookbook": { "$ref": "#/definitions/Cookbook" }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/cookbooks/{id}": {
      "get": {
        "tags": ["Cookbooks"],
        "summary": "Get cookbook by ID",
        "description": "Get a specific cookbook by its ID. User must be the owner.",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cookbook ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Cookbook retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Cookbook retrieved successfully" },
                "cookbook": { "$ref": "#/definitions/Cookbook" }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "403": {
            "description": "Forbidden - Access denied, not the owner",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Not Found - Cookbook not found",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    },
    "/reviews/recipe/{recipeId}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get reviews for recipe",
        "description": "Get all reviews for a specific recipe with average rating",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Reviews retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Reviews retrieved successfully" },
                "recipeId": { "type": "string", "example": "507f1f77bcf86cd799439011" },
                "count": { "type": "number", "example": 2 },
                "averageRating": { "type": "number", "example": 4.5 },
                "reviews": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Review" }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Cannot view reviews for private recipe",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Not Found - Recipe not found",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      },
      "post": {
        "tags": ["Reviews"],
        "summary": "Add review to recipe",
        "description": "Add a new review to a recipe with rating and comment",
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authentication"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Review data",
            "required": true,
            "schema": { "$ref": "#/definitions/ReviewInput" }
          }
        ],
        "responses": {
          "201": {
            "description": "Review created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": { "type": "string", "example": "Review created successfully" },
                "review": { "$ref": "#/definitions/Review" }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation Error",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "403": {
            "description": "Forbidden - Cannot review private recipe",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "404": {
            "description": "Not Found - Recipe not found",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "409": {
            "description": "Conflict - User has already reviewed this recipe",
            "schema": { "$ref": "#/definitions/Error" }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": { "$ref": "#/definitions/Error" }
          }
        }
      }
    }
  },
  "definitions": {
    "Recipe": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "507f1f77bcf86cd799439011" },
        "title": { "type": "string", "example": "Chocolate Chip Cookies" },
        "description": { "type": "string", "example": "Classic homemade cookies" },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "flour" },
              "quantity": { "type": "string", "example": "2 cups" }
            }
          }
        },
        "instructions": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["Preheat oven to 375°F", "Mix ingredients", "Bake for 10 minutes"]
        },
        "prepTimeMinutes": { "type": "number", "example": 15 },
        "cookTimeMinutes": { "type": "number", "example": 12 },
        "servings": { "type": "number", "example": 24 },
        "isPublic": { "type": "boolean", "example": true },
        "tags": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["dessert", "cookies"]
        },
        "creatorId": {
          "type": "object",
          "properties": {
            "_id": { "type": "string", "example": "507f1f77bcf86cd799439012" },
            "displayName": { "type": "string", "example": "John Doe" }
          }
        },
        "createdAt": { "type": "string", "format": "date-time" },
        "updatedAt": { "type": "string", "format": "date-time" }
      }
    },
    "RecipeInput": {
      "type": "object",
      "required": ["title"],
      "properties": {
        "title": { "type": "string", "example": "Chocolate Chip Cookies" },
        "description": { "type": "string", "example": "Classic homemade cookies" },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string", "example": "flour" },
              "quantity": { "type": "string", "example": "2 cups" }
            }
          }
        },
        "instructions": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["Preheat oven to 375°F", "Mix ingredients"]
        },
        "prepTimeMinutes": { "type": "number", "example": 15 },
        "cookTimeMinutes": { "type": "number", "example": 12 },
        "servings": { "type": "number", "example": 24 },
        "isPublic": { "type": "boolean", "example": true },
        "tags": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["dessert", "cookies"]
        }
      }
    },
    "Cookbook": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "507f1f77bcf86cd799439013" },
        "name": { "type": "string", "example": "My Dessert Collection" },
        "description": { "type": "string", "example": "Sweet treats and desserts" },
        "recipeIds": {
          "type": "array",
          "items": { "$ref": "#/definitions/Recipe" }
        },
        "ownerId": {
          "type": "object",
          "properties": {
            "_id": { "type": "string", "example": "507f1f77bcf86cd799439012" },
            "displayName": { "type": "string", "example": "John Doe" }
          }
        },
        "createdAt": { "type": "string", "format": "date-time" },
        "updatedAt": { "type": "string", "format": "date-time" }
      }
    },
    "CookbookInput": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": { "type": "string", "example": "My Dessert Collection" },
        "description": { "type": "string", "example": "Sweet treats and desserts" },
        "recipeIds": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["507f1f77bcf86cd799439011"]
        }
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "_id": { "type": "string", "example": "507f1f77bcf86cd799439014" },
        "rating": { "type": "number", "minimum": 1, "maximum": 5, "example": 5 },
        "comment": { "type": "string", "example": "Absolutely delicious!" },
        "reviewerId": {
          "type": "object",
          "properties": {
            "_id": { "type": "string", "example": "507f1f77bcf86cd799439015" },
            "displayName": { "type": "string", "example": "Jane Smith" }
          }
        },
        "recipeId": { "type": "string", "example": "507f1f77bcf86cd799439011" },
        "createdAt": { "type": "string", "format": "date-time" },
        "updatedAt": { "type": "string", "format": "date-time" }
      }
    },
    "ReviewInput": {
      "type": "object",
      "required": ["rating"],
      "properties": {
        "rating": { "type": "number", "minimum": 1, "maximum": 5, "example": 5 },
        "comment": { "type": "string", "example": "Absolutely delicious!" }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": { "type": "string", "example": "Error message" },
        "message": { "type": "string", "example": "Additional context" },
        "details": {
          "type": "array",
          "items": { "type": "string" },
          "example": ["Specific validation errors"]
        }
      }
    }
  }
}